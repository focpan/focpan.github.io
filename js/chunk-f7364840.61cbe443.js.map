{"version":3,"sources":["webpack:///./src/views/components/areaChart.vue?bd15","webpack:///./src/views/components/areaChart.vue?5764","webpack:///src/views/components/areaChart.vue","webpack:///./src/views/components/areaChart.vue?1972","webpack:///./src/views/components/areaChart.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","staticRenderFns","component"],"mappings":"kHAAA,W,kECAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACE,YAAY,UAClHC,EAAkB,GCItB,GACA,iBACA,mCACA,OACA,UAEA,SACA,WACA,SACA,UACA,QACA,8CACA,kEAEA,MACA,QACA,8CACA,uCAEA,MAEA,QACA,MAGA,UAEA,gBACA,SA6CA,OA5CA,6BACA,OACA,YACA,YACA,UACA,cACA,WACA,UACA,OACA,cACA,IACA,IACA,KACA,KACA,aACA,2BAEA,CACA,4BACA,CACA,4BAEA,YAYA,WACA,SAEA,WACA,kBAEA,wBAEA,YAEA,GAEA,WACA,OACA,OACA,yBACA,uBACA,WACA,wBACA,YACA,qBAEA,UACA,YAEA,SACA,eACA,aACA,aAEA,0BACA,WACA,gBACA,aAGA,sBACA,gBAIA,OAHA,cACA,wCAEA,IAGA,OACA,CACA,kCACA,cACA,YACA,aACA,WACA,wBACA,cAGA,KACA,CACA,kCACA,UACA,WACA,YACA,iBAEA,MACA,CACA,gBACA,eACA,WACA,WACA,wBACA,WACA,gBAEA,UACA,QACA,WACA,gBACA,UAGA,mBACA,wBAEA,OACA,CACA,aACA,MACA,QACA,UACA,QACA,WACA,kBAGA,WACA,wBACA,WACA,iBAEA,UACA,UAEA,yBACA,WACA,eACA,wBACA,WACA,eAEA,qBAGA,CACA,aACA,MACA,QACA,UACA,QACA,WACA,kBAGA,UACA,UAEA,WACA,wBACA,WACA,iBAEA,yBACA,eACA,wBACA,WACA,cAEA,WACA,sBAGA,6BAEA,gCACA,6BACA,kCACA,gCAEA,8BAEA,UACA,SACA,CACA,2BACA,+BAGA,iBAGA,UACA,kBCpOkW,I,wBCQ9VC,EAAY,eACd,EACAT,EACAQ,GACA,EACA,KACA,WACA,MAIa,aAAAC,E","file":"js/chunk-f7364840.61cbe443.js","sourcesContent":["export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--11-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../../node_modules/less-loader/dist/cjs.js??ref--11-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./areaChart.vue?vue&type=style&index=0&id=a29d2834&lang=less&scoped=true&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"area\"})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div class=\"area\"></div>\n</template>\n\n<script>\nexport default {\n    name: \"areaChart\",\n    props: [ 'config', 'selectRangeDate'],\n    data() {\n        return {}\n    },\n    methods: {\n        setData(type) {\n            let arr = [];\n            switch (type) {\n                case 'x':\n                    for (let i = 0; i < this.selectRangeDate.length; i++) {\n                        arr.push(this.selectRangeDate[i][1] + \".\" + this.selectRangeDate[i][2])\n                    }\n                    break;\n                case 's' :\n                    for (let i = 0; i < this.selectRangeDate.length; i++) {\n                        arr.push((Math.random() * 250).toFixed(0))\n                    }\n                    break;\n\n                default:\n                    break;\n            }\n\n            return arr;\n        },\n        setSeriesData() {\n            let arr = [];\n            this.config.data.forEach(item=> {\n                let obj = {\n                    name: item.name,\n                    type: 'line',\n                    smooth: true,\n                    symbol: \"none\",\n                    areaStyle: {\n                        opacity: 1,\n                        color: {\n                            type: 'linear',\n                            x: 0,\n                            y: 0,\n                            x2: 0,\n                            y2: 1,\n                            colorStops: [{\n                                offset: 0, color: item.color[0] // 0% 处的颜色\n                            },\n                                {\n                                    offset: 0.4, color: item.color[0] // 40% 处的颜色\n                                }, {\n                                    offset: 1, color: item.color[1] // 100% 处的颜色\n                                }],\n                            global: false // 缺省为 false\n                        }\n                        // color: new this.$echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n                        //     offset: 0, color: item.color[0] // 0% 处的颜色\n                        // },\n                        //     {\n                        //         offset: 0.4, color: item.color[0] // 0% 处的颜色\n                        //     }, {\n                        //         offset: 1, color: item.color[1] // 100% 处的颜色\n                        //     }]), //背景渐变色\n                        // origin: 'start'\n                    },\n                    lineStyle: {\n                        width: 0,\n                    },\n                    itemStyle: {\n                        color: item.color[0]\n                    },\n                    data: this.setData('s')\n                }\n                arr.push(obj)\n            })\n            return arr;\n        },\n        setChart() {\n            let option = {\n                title: {\n                    show: !!this.config.title,\n                    text: this.config.title,\n                    textStyle: {\n                        color: this.config.color,\n                        fontSize: 12,\n                        fontWeight: 'normal'\n                    },\n                    top: '12%',\n                    left: '38%'\n                },\n                tooltip: {\n                    trigger: 'axis',\n                    axisPointer: {            // 坐标轴指示器，坐标轴触发有效\n                        type: 'none'        // 默认为直线，可选为：'line' | 'shadow'\n                    },\n                    backgroundColor: '#11367a',\n                    textStyle: {\n                        color: '#6dd0e3',\n                        fontSize: 10,\n                    },\n\n                    formatter: function (params) {\n                        let str = params[0].name;\n                        params.forEach(item=> {\n                            str += `<br> ${item.seriesName}: ${item.value}`\n                        })\n                        return str\n                    }\n                },\n                legend:\n                    {\n                        top: this.config.title?'23%': '11%',\n                        left: 'center',\n                        itemWidth: 7,\n                        itemHeight:7,\n                        textStyle: {\n                            color: this.config.color,\n                            fontSize: 12\n                        },\n                    },\n                grid:\n                    {\n                        top: this.config.title?'40%': '14%',\n                        left: '5%',\n                        right: '5%',\n                        bottom: '5%',\n                        containLabel: true\n                    },\n                xAxis:\n                    {\n                        type: 'category',\n                        boundaryGap: false,\n                        axisLabel: {\n                            interval: 0,\n                            color: this.config.color,\n                            fontSize: 9,\n                            align: 'center'\n                        },\n                        axisLine: {\n                            show: true,\n                            lineStyle: {\n                                color: '#1a3c58',\n                                width: 2,\n                            }\n                        },\n                        axisTick: {show: false},\n                        data: this.setData('x')\n                    },\n                yAxis: [\n                    {\n                        type: 'value',\n                        min: 0,\n                        max: 300,\n                        axisLine: {\n                            show: true,\n                            lineStyle: {\n                                color: '#1a3c58'\n                            }\n                        },\n                        axisLabel: {\n                            color: this.config.color,\n                            fontSize: 9,\n                            showMaxLabel: false,\n                        },\n                        axisTick: {\n                            length: 3\n                        },\n                        name: this.config.name[0],\n                        nameGap: -5,\n                        nameTextStyle: {\n                            color: this.config.color,\n                            fontSize: 9,\n                            align: 'right'\n                        },\n                        splitLine: {show: false}\n\n                    },\n                    {\n                        type: 'value',\n                        min: 0,\n                        max: 300,\n                        axisLine: {\n                            show: true,\n                            lineStyle: {\n                                color: '#1a3c58'\n                            }\n                        },\n                        axisTick: {\n                            length: 3\n                        },\n                        axisLabel: {\n                            color: this.config.color,\n                            fontSize: 9,\n                            showMaxLabel: false,\n                        },\n                        name: this.config.name[1],\n                        nameTextStyle: {\n                            color: this.config.color,\n                            fontSize: 9,\n                            align: 'left'\n                        },\n                        nameGap: -5,\n                        splitLine: {show: false}\n                    },\n                ],\n                series: this.setSeriesData()\n            };\n            if (this.selectRangeDate.length > 7) {\n                option.xAxis.axisLabel.interval = 3;\n                option.xAxis.axisLabel.showMaxLabel = false;\n                option.xAxis.axisLabel.align = 'left';\n            }\n            let myChart = this.$echarts(this.$el);\n\n            myChart.clear();\n            myChart.resize(\n                {\n                    width: this.$el.offsetWidth,\n                    height: this.$el.offsetHeight\n                }\n            )\n            myChart.setOption(option);\n        }\n    },\n    mounted() {\n        this.setChart();\n    }\n}\n</script>\n\n<style lang=\"less\" scoped>\n.area {\n    height: 100%;\n}\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./areaChart.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./areaChart.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./areaChart.vue?vue&type=template&id=a29d2834&scoped=true&\"\nimport script from \"./areaChart.vue?vue&type=script&lang=js&\"\nexport * from \"./areaChart.vue?vue&type=script&lang=js&\"\nimport style0 from \"./areaChart.vue?vue&type=style&index=0&id=a29d2834&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"a29d2834\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}